УДК 004.415.2+ 678.01


Программная система исследований динамики технологических процессов формования химических волокон

А.Л. Калабин, д.ф.-м.н., профессор Тверского государственного технического университета, наб. A software tool is developed, which is used for studying the dynamics of technological processes of chemical fiber spinning.Афанасия Никитина, 22, г. Тверь, 170026, Россия, р.т. (4822) 449493, kalabin@tstu.tver.ru.
Е.В. Удалов, аспирант Тверского государственного технического университета, специалист ОАО «Гута-банк», пр-т Тверской, 6, г. Тверь, 170100, Россия, д.т. +79206804466, evgeny.udalov@mail.ru.
А.Р. Хабаров, к.т.н., профессор Тверского государственного технического университета, р.т. (4822) 44-42-88, al_xabarov@mail.ru.	

Аннотация
Разработано программное средство для исследования динамики технологических процессов  формования химических волокон. Производство химических волокон из расплавов и растворов полимеров – это одна из наиболее инновационных отраслей, основной задачей которой является создание волокон с заданными свойствами. Эта задача реализуется посредством реализации технологии. 
Моделирование является одним из методов исследования существующих и разработки новых технологий. При моделировании определяются количественные зависимости между условиями процессов получения, структурой волокон и свойствами получаемого материала. Оно позволяет варьировать технологические режимы, минимизируя опытные дорогостоящие работы.
Предложенная система используется для моделирования динамики процесса двух видов формования волокон: из расплава с приемным устройством и аэродинамическое формование. Программа представляет собой JavaDesktop приложение, которое обладает интуитивно понятным графическим интерфейсом. Оно позволяет в условном виде отображать схему технологических процессов, связи между его элементами и их характеристиками, редактировать параметры элементов схемы, выполнять расчет сил, действующих на волокно, отображать в графическом виде рассчитанные данные. Чтобы исследовать полученные результаты в более функциональных системах, реализован экспорт результатов расчета в файл. В приложении возможно сохранить проект в файл с целью последующей его загрузки.
В программной системе реализованы численные методы решения системы нелинейных обыкновенных дифференциальных уравнений, метод сеток (конечно-разностный метод) в цилиндрических координатах с учетом подвижной границы, интерполяция кубическими сплайнами экспериментальных зависимостей. Предложены алгоритмы выбора граничных условий и верификации численных решений. Так как процедура расчета не устойчива относительно входных данных и относительно продолжительна по времени, она выполняется в потоке, отдельном от потока-диспетчера событий.
Работоспособность программной системы подтверждается результатами моделирования, которые удовлетворительно согласуются с экспериментальными данными.

Ключевые слова
Программа, моделирование, динамические характеристики, формование химических волокон.

A software system for studying of the dynamics of technological processes of chemical fiber spinning

Kalabin A.L., Professor of Tver State Technical University, Doctor of Physics and Mathematics.
Udalov E.V., Graduate Student of The Tver State Technical University, programmer (ОJSC «GUTA-BANK»).
Khabarov A.R., Candidate of Engineering Sciences, Professor of Tver State Technical University.

Аbstract
There is developed a software tool, which is used for studying the dynamics of technological processes of chemical fiber spinning. The production of chemical fibers from melts and polymer solutions is one of the most innovative industries. Its main task is the creation of a fiber with the desired properties. This objective is realized through spinning technology. 
Modelling is one of the methods for researching of existing technologies and development of new ones. Using of modelling is determined by the quantitative relations between the conditions of production processes, the fiber structure and properties of the obtained material. Modelling allows you at the same time to change technologic modes and minimize experimental costs.
The proposed system is used for modelling of the fiber spinning process dynamics. Two types of fibers spinning are supported: spinning from a melt and aerodynamic spinning. The program is a Java Desktop application that has an intuitive graphical interface. It can display the technological scheme of the chemical fiber spinning process, the relationships between scheme elements and their characteristics, edit the parameters of scheme elements, calculate the forces acting on the fiber, display the calculated data in a graphic way. Result file export function was implemented to explore the results in more functional systems. The application also has the ability to save a project into a file for next using.
The application implements numerical methods for solving systems of nonlinear ordinary differential equations, method of grids (finite difference method) in cylindrical coordinates given mobile boundary, the interpolation cubic splines experimental dependencies. There are proposed some algorithms for the selection of boundary conditions and verification of numerical solutions. The calculation process runs in a thread, which is separated from the event dispatch thread, due to the fact that calculation can take a relatively long time. 
The performance of a software system is confirmed by the simulation results, which are in good agreement with the experimental data.

Key words
Desktop application, modelling, dynamic characteristics, chemical fiber spinning.

Ежегодное производство химических волокон составляет несколько десятков миллионов тонн. Это одна из наиболее инновационных отраслей, основной задачей которой является создание волокон с заданными свойствами, решаемая посредством технологии. Моделирование является одним из методов исследования существующих и разработки новых технологий. Оно  позволяет определить количественные зависимости между условиями процессов получения, структурой волокон и свойствами получаемого материала. Свойства волокон, в основном, определяются их структурой. Моделирование позволяет определять технологические режимы, минимизируя опытные дорогостоящие работы. Стадия предпроектных исследований и расчетов является определяющей при разработке современных технологических процессов формования химических волокон. Эти исследования основаны на взаимосвязанном рассмотрении комплекса одновременно действующих сложных физико-химических явлениях при элонгационном течении тонких неизотермических струй расплавов и растворов полимеров.
Реализовать и использовать математические модели технологических процессов формования химических волокон возможно только в программной системе. Это обусловлено тем, что: во-первых, процессы формования описываются нелинейными уравнениями с подвижной границей, что требует их исключительно численного решения [1,2]; во-вторых, решение ряда отдельных повторяющихся вычислительных задач при моделировании в форме унифицированных программных модулей обусловило их объединение в систему; в-третьих, необходимостью использования базы данных для структурирования данных различных видов формования, используемых элементов схем технологического процесса, свойств полимеров растворов и расплавов и других исходных данных. 
Основная функция разработанной программной системы ForcesResearch – моделирование и анализ сил, воздействующих на формуемое волокно при формованиях волокон из расплава с приемным устройством (классическое формование из расплава (КФВ)) [3] и аэродинамическим способом (АФВ) [4]. Отметим актуальность исследования динамики при формовании, так как при вытягивании струи расплава полимера его молекулы ориентируются, вследствие этого и приобретают основные пользовательские свойства, например прочность. 
Приложение написано на языке Java (версия jre 1.7) в интегрированной среде разработке IntelliJIdea 13.1 CommunityEdition [5] и представляет собой desktop-приложение. В качестве библиотеки для создания графических интерфейсов использовалась библиотека Swing [6]. При разработки архитектуры приложения реализована концепция Model-view-controller (MVC, «модель-представление-поведение»), согласно которой модель данных приложения, пользовательский интерфейс и взаимодействие с пользователем разделены на три отдельных компонента таким образом, чтобы модификация одного из компонентов оказывала минимальное воздействие на остальные [7].
Основные функции приложения:
1.	Схематичное отображение схемы технологического процесса;
2.	Хранение в базе данных программы значений по умолчанию всех элементов технологического процесса и расчетной схемы;
3.	Редактирование параметров схемы;
4.	Сохранение проекта в файл с целью последующей его загрузки;
5.	Проведение моделирования по созданной модели;
6.	Отображение результатов моделирования сил в виде графиков;
7.	Экспорт результатов в csv-файл.
Графический интерфейс пользователя проектировался таким образом, чтобы он пояснял технологическую схему процесса формования и показывал в условном виде связи между его элементами и их характеристиками. Интерфейс позволяет выбрать один из видов моделируемого процесса: классическое формование из расплава или  аэродинамическое формование.
Рассмотрим диаграмму состояний приложения [8] – рис. 1. После запуска программы пользователю предлагается выполнить одно из следующих действий: создать новый проект, либо открыть ранее созданный. Далее возможно отредактировать параметры элементов, участвующих в технологическом процессе (ТП). Набор элементов ТП определяется типом формования. После редактирования схемы возможно выполнение расчета по сконфигурированной модели. Расчет, из-за применения итеративных алгоритмов, будет занимать некоторое время. При этом возможно зацикливание, при задании не согласованных значениях параметров ТП. Чтобы во время расчета интерфейс приложения не «замирало», процедура расчета выполняется в потоке, отдельном от потока-диспетчера событий (EventDispatchThread (EDT)) [9]. EDT обслуживает взаимодействие пользователя с интерфейсом приложения.
Когда расчет завершится, приложение строит графики сил. На этом этапе имеется возможность отредактировать внешний вид графиков: цвет кривой, коэффициент масштабирования и т.д. Пользователю доступен экспорт рассчитанных данных в файл в csv-формате для их анализа в других программных средствах. С этого этапа можно снова перейти к редактированию схемы. 
На этом основной цикл работы с приложением завершается. 
 
Рис. 1. Диаграмма состояний приложения

Приложение проектировалось в соответствии с основными принципами объектно-ориентированного программирования  (ООП): инкапсуляция, наследование, полиморфизм [10]. Анализ предметной области позволил выделить из нее классы объектов. При этом классы были сгруппированы по своему предназначению. Каждый объект какого-либо класса является по возможности самостоятельной единицей, внутренняя реализация которой максимально сокрыта внутри неё. Широко применялось наследование классов. Например, классы элементов схем наследовались от общего класса, а схемы процессов, солверы для разных типов формования наследовались от общего предка, перенимая общие элементы (свойства и методы) и расширяя их. Это способствовало выражению специализации и генерализации. Также использовался принцип полиморфизма при реализации солвера, позволяя единообразно ссылаться на объекты классов-потомков, реализующих специфику конкретного расчета. 
Рассмотрим подробно диаграмму классов [11], которые можно условно разделить на две группы. Первая группа содержит классы, описывающие элементы схемы ТП (СТП) и их характеристики (рис. 2), и классы так называемого «солвера», который реализует алгоритмы, используемые для моделирования сил (рис. 3). Вторая группа содержит классы необходимые для создания графического интерфейса и управления моделью. 
СТП представлена абстрактным классом TechnologyScheme и двумя дочерними классами TechSchemeClassicFFи TechSchemeAeroFF.Класс TechnologyScheme содержит элементы, общие для обоих типов формования (классическое и аэродинамическое). Дочерние классы содержат дополнительные элементы схемы, участвующие только в соответствующих типах формования.
Набор элементов схемы состоит для КФВ из: фильера, полимер, приемное устройство, окружающая среда; для АФВ добавляется термошахта, эжектор и  приемный стол. Родительский класс – SchemeElement, – содержит в себе общие для всех элементов данные и методы. 
Для хранения параметров элементов схемы созданы специальные классы. Параметр класса FileraTypeAttributeсодержит информацию о типе фильеры. Параметр класса DistributionAttribute содержит массив точек, который может представлять распределение температур или скорости эжектора. Параметр класса DoubleAttribute хранит вещественное значение. Параметр класса StringAttribute используется для строковых характеристик, например, таких, как название полимера.
Также для расчета сил необходимо выделить такой элемент схемы, как вычислительную схему (класс CalculationScheme), где задаются необходимые граничные значения для вычислительных алгоритмов: шаг по пути формования, шаг сетки, максимальное и минимальное начальные значения  градиента скорости, точность расчета.
СТП процесса выступает в качестве исходных данных для расчета. Сам расчет в отдельном потоке выполняет так называемый солвер – класс Computer (рис. 3). Специфика расчетов КФВ и АФВ учитывается в соответствующих классах наследниках ComputerClassicFF, ComputerAeroFF.  

 
Рис. 2. Диаграмма классов. Модель. Часть 1.

По окончании работы солвер выдает результат расчета в виде объекта класса CalculationResult. Специфика выходных данных для определенного вида формования учитывается в классах-наследниках ComputingResultClassicFF и ComputingResultAeroFF. Результат расчета содержит набор графиков данных, каждый из которых представлен классом Curve, содержащем   информацию для построения кривой: набор точек, название для легенды, подпись на координатной плоскости и т.д. Для визуализации графиков использовалась java-библиотека XChart [12].
В результате расчетов КФВ и АФВ формируются разные наборы графиков, но ряда величин совпадают: скорость волокна, первая производная скорости волокна, температура полимера, температура окружающей среды, реологическая сила, сумма сил, гравитационная сила, аэродинамическая сила, инерционная сила, сила поверхностного натяжения. Реализована возможность экспортировать результат расчета в виде csv-файла.

 
Рис. 3. Диаграмма классов. Модель. Часть 2.

Вторую группу классов образуют те, который участвуют в создании графического интерфейса пользователя и управлении СТП и расчетом (рис. 4). Класс основного окна приложения MainForm. Здесь используются панели MyXChartPanel, DrawableJPanel для отображения СТП и графиков. Диалоги MyProgressDialog и SelectExtrusionTypeDialog используются для организации взаимодействия с пользователем.
 
Рис. 4. Диаграмма классов. Графический интерфейс и управление моделью.

В приложении реализована возможность сохранения проекта в файл для последующего его прочтения и работы над ним.
На рис. 5, 6, 7 представлены основные окна приложения.

 
Рис. 5. Окно приложения со схемой процесса при классическом формовании волокон
 
Рис. 6. Окно приложения, содержащего результат моделирования классического формования волокон
 
Рис. 7. Окно приложения, содержащего результат моделирования аэродинамического формования волокон.

Солвер приложения содержит программно реализованные численные методы решения системы нелинейных обыкновенных дифференциальных уравнений (ОДУ), метод сеток (конечно-разностный метод) для решения уравнений в частных производных в цилиндрических координатах, численное интегрирование, интерполяция кубическими сплайнами  экспериментальных зависимостей. 
При численном решении уравнения движения, являющегося ОДУ второго порядка y’’(y’, y, x)=0, необходимы начальные условия y(0)и y’(0). Однако из условий известны значения только y(0) и y(L). Поэтому предложен алгоритм нахождения y’(0) по известному значению y(L). Известно, что y(x)– непрерывная, дифференцируемая, монотонно возрастающая функция на всем пути формования[0, L]. Тогда её производная больше нуля на всем участке формования: y’(x)>0. Учитывая это значение скорости в конечной точке можно рассчитывать через ряд вида: 

y(L) ? y(0) + y’(x)L + …

Значение y(L) имеет конкретное значение, что значит, что ряд сходится. Членами ряда, что идут после второго, можно пренебречь. Их вклад вy(L) несущественен. То есть получается 

y(L) ? y(0) + y’(x)L
y’(x)? (y(L)-y(0))/L

Величины y(0),y(L)иLнам известны.
Шаг 1. Рассчитываем y’(x) ? (y(L) - y(0)) / L.
Шаг 2. Далее численным методом решаем исходное ОДУ.  Получаем значение конечной скорости yi(L).
Шаг 3. Сравниваем рассчитанное значение yi(L)со значением из начальных условий y(L). Анализируем возможны варианты:
1) Условие |yi(L)-y(L)|<Eвыполняется (E – точность вычисления, задаваемая как параметр), то считаем, что y’(x) найдена. Значит рассчитанная на шаге 2 функция и есть искомая. Конец алгоритма.
2) yi(L) >y(L), тоy’i+1(0) = y’i(0) – ?i. Переход на шаг 2.
3) yi(L) <y(L), тоy’i+1(0) = y’i(0) + ?i. Переход на шаг 2.
?i -рассчитываемое на каждом шаге значение приращения. 
На практике количество шагов до сходимости не превышает нескольких десятков.
В связи с использование нескольких и многократно повторяющихся численных методов возникает вопрос верификации полученного решения, для чего используется проверка решения системы ОДУ. Суть его заключается в том, что ОДУ получается из исходного уравнения баланс сил, действующих на волокно. Решениями системы ОДУ является v(x) – продольная скорость и T(x) волокна. Используя эти функции, вычисляются силы входящие в уравнение баланса сил и проверяется выполнение исходного уравнения, что  свидетельствует о корректности проведенных вычислений. 
Работоспособность разработанной программной системы предпроектных исследований технологических процессов формования химических волокон подтверждается результатами моделирования [3, 4], которые удовлетворительно согласуются с экспериментальными данными. Проведены расчеты сил, действующих на волокно при формовании из расплава, как функций от пути формования при различных скоростях намотки. На основе расчетов определены значения параметров при разработке новых технологических процессов. В перспективе планируется модифицировать данную разработку в элемент экспертной системы.


Литература	References
	
1.	Калабин А.Л., Керницкий А.В., Пакшвер Э.А. Программная система предпроектных исследований технологических процессов формования химических волокон // Программные продукты и системы. 2008, № 1.C. 34-36.
2.	Зябицкий А. Теоретические основы формования волокна. – М.: Химия, 1979. 504 c.
3.	Kalabin A.L., Udalov E.V. Dynamic characteristics of filament melt-spinning // Fibre Chemistry. 2013.  44. № 6. рр. 356-360. 

4.	A.L. Kalabin, E. V. Udalov. Modeling the Dynamics of the Aerodynamic Forming of Fibers // FibreChemistry. 2014, 46, №1. Pp 10-15. 
5.	Офицальный сайт среды разработки InelliJ IDEA, available at: https://www.jetbrains.com/idea/ (accessed 10 September 2014).
6.	Хорстманн Кей С, Корнелл Гари. Java 2. Библиотека профессионала, том 1. Основы. 8-е издание.: Пер. с англ. - М.: ООО "И.Д. Вильямс", 2012. - 816 с.
7.	Model-View-Controller. Свободная энциклопедия Википедия, available at: https://ru.wikipedia.org/wiki/Model-View-Controller (accessed 10 September 2014).
8.	Фаулер M. UML. Основы, 3-е издание. – Пер. с англ. – СПб: Символ-Плюс, 2004. – 192 с.

9.	The Java Tutorials. Concurrency in Swing, available at:  http://docs.oracle.com/javase/tutorial/ uiswing/ concurrency/index.html (accessed 15 October 2014).
10.	Kathy Sierra, Bert Bates. SCJP Sun Certified Programmer for Java 6 Exam 310-065 Study Guide. – McGraw-Hill Osborne Media, 2008, 851 p.
11.	Сущности на диаграмме классов, available at: http://book.uml3.ru/sec_3_2 (accessed 23 September 2014).
12.	XChart. Basic Charts for Java Applications, available at: http://xeiam.com/xchart/ (accessed 16 October 2014).	1.	Kalabin A.L., Kernickij A.V., Pakshver E.A. Software system for scoping studies of chemical fiber spinning technological processes. Programmnyeproduktyisistemy [Software & Systems]. 2008, no. 1, pp. 34–36 (in Russ.).
2.	Zjabickij A. Teoreticheskie osnovy formovanija volokna [Theoretical bases of fibers moulding]. Moscow, Chemistry Publ., 1979, 504 p.
3.	Kalabin A.L., Udalov E.V. Dynamic characteristics of filament melt-spinning // Fibre Chemistry. 2013.  44. № 6. рр. 356-360.
4.	A.L. Kalabin, E. V. Udalov. Modeling the Dynamics of the Aerodynamic Forming of Fibers // FibreChemistry. 2014, 46, №1. Pp 10-15.
5.	IntelliJ IDEA IDE official web-site,  available at: https://www.jetbrains.com/idea/ (accessed 10 September 2014).
6.	Horstman K.S, Kornell G. Java 2. Biblioteka professionala. Tom 1. Osnovy. 8-e izdanie [Java 2. Professional’s library, book 1. Basics. 8th edition]. Moscow, Williams Publishing House, 2012, 816 p.
7.	Model-View-Controller. The free encyclopedia Wikipedia, available at: https://ru.wikipedia.org/wiki/ Model-View-Controller (accessed 10 September 2014).
8.	Fauler M., UML. Osnovy, 3-e izdanie [UML. Basics, 3th edition]. St. Petersburg, Simvol-Plus Publ, 2004, 192 p.
9.	The Java Tutorials. Concurrency in Swing, available at:  http://docs.oracle.com/javase/tutorial/ uiswing/ concurrency/index.html (accessed 15 October 2014).
10.	Kathy Sierra, Bert Bates. SCJP Sun Certified Programmer for Java 6 Exam 310-065 Study Guide. – McGraw-Hill Osborne Media, 2008, 851 p.
11.	Sushnosti na diagramme klassov [Entities on a class diagram], available at: http://book.uml3.ru /sec_3_2 (accessed 23 September 2014).
12.	XChart. Basic Charts for Java Applications, available at: http://xeiam.com/xchart/ (accessed 16 October 2014).



