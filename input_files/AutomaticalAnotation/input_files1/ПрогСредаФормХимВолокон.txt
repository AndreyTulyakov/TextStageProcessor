ПРОГРАММНАЯ СИСТЕМА ПРЕДПРОЕКТНЫХ ИССЛЕДОВАНИЙ ТЕХНОЛОГИЧЕСКИХ ПРОЦЕССОВ ФОРМОВАНИЯ ХИМИЧЕСКИХ ВОЛОКОН

Калабин А.Л., Керницкий А.В., Пакшвер Э.А.

Около 40 миллионов тонн в год химических волокон производится в мире из расплавов и растворов полимеров. Основная задача производства – создание волокон с заданными свойствами, которая реализуется посредством технологии. Поэтому целью исследования существующих и разработки новых технологий является определение количественных зависимостей между условиями процессов получения, структурой волокон и свойствами получаемого материала, так как свойства волокон определяются их структурой. Моделирование является одним из методов изучения этих процессов.
Адекватную математическую модель процесса используют при: проектировании новой, оптимизации имеющейся технологии, изменении ассортимента, когда необходимо эмпирически подбирать технологические параметры на промышленном оборудовании. Это позволяет менять технологические режимы, минимизируя опытные дорогостоящие работы. Стадия предпроектных исследований и расчетов является определяющей при разработке современных технологических процессов формования химических волокон основанных на взаимосвязанном рассмотрении комплекса одновременно действующих сложных физико-химических явлениях при элонгационном течении тонких неизотермических струй расплавов и растворов полимеров.
Реализовать и использовать математические модели технологических процессов формования химических волокон возможно только в программной системе. Это обусловлено тем, что: во-первых, процессы формования описываются уравнениями нелинейными и с подвижной границей [Зябицкий А. Теоретические основы формования волокна. -М.: Химия, 1979], что требует их исключительно численного решения; во-вторых, решение ряда отдельных задач для моделирования и использование для этого комплекса унифицированных программных модулей обусловило их объединение в систему; в-третьих, необходимостью использования базы данных для описания различных видов формования, выбранных элементов схем технологического процесса, свойств полимеров растворов и расплавов и других исходных данных. 
В настоящее время существует большое количество программ визуального моделирования различных процессов, например: VisSim, Simulink для Mathlab и МвТУ. Нами применен такой подход для моделирования технологических процессов. Для создания подобных программ визуального моделирования, логичным является использование объектно-ориентированного программирования для отображения, обработки пользовательского ввода и сохранения информации.
При разработке программной системы моделирования процессов формования разработан удобный интуитивно-понятный интерфейс, в тоже время поясняющий технологическую и схему и аппаратурное оформление конкретного процесса для показа в условном виде связей между его элементами и отражения характеристик каждого элемента. Классы используются для описания таких объектов технологического процесса, как: фильера, приемное устройство, термошахта, эжектор, осадительная ванна, приемный стол и т.п. Несколько классов используются для объединения параметров среды, полимера и свойств расчета в единые объекты. 
Поставленные задачи решены с помощью объектно-ориентированного программирования на языке С++ в среде Microsoft Visual Studio. Классы всех этих объектов унаследованы от абстрактного класса “Device”. Этот класс отвечает за: условное отображение объекта; обработку пользовательского ввода; сохранение параметров объекта в файл или в базу данных. Для чего соответственно использовались методы класса “Device”:
Каждый класс, представляющий элемент технологической схемы, имеет метод для получения своих параметров из файла, и метод для записи своих характеристик в файл. Управляет же процессом сохранения всей технологической схемы класс CConstructorDoc (класс документа). При сохранении технологической схемы сначала в файл сохраняется тип расчета, количество элементов и их тип, входящих в процесс, после этого последовательно для каждого элемента вызывается метод сохранения свойств элемента (методу передается указатель на контекст файла). При открытии уже сохраненного документа сначала получается информация о типе процесса. После этого поток о количестве элементов и их типе последовательно для каждого элемента вызывается метод чтения данных элемента из файла.

 
 Диаграмма классов

Диаграмма классов приведена на рис. 1, где изображены обобщающие связи (стрелка, идущая от дочернего класса указывает на родительский, классы MFC закрашены в серый цвет).
При разработке программного обеспечения была использована многопоточная обработка по следующим причинами: во-первых, из-за применения итеративных алгоритмов возможно войти в бесконечный цикл; во-вторых, расчет может быть очень продолжительным в течении которого кнопки и меню не будут реагировать на пользовательский ввод; в-третьих, при этом подходе в одних модулях проекта сосредоточена работа с интерфейсом, в другом модуле - расчет модели. Каждый вид расчета представлен одним потоком, они создаются вначале работы и уничтожаются только при ее завершении, что бы не занимать ресурсы центрального процессора и не усложнять работу приложения все потоки создаются приостановленными (“suspended”), в этом состоянии планировщик задач не выделяет им процессорное время. Используется только два вида объектов для синхронизации: исключающий семафор “Mutex” и объект событий “Event”. Несмотря на то, что создание многопоточного приложения осложнено необходимостью синхронизации потоков, все это оправдывается повышающейся эффективностью программного обеспечения. Диаграмма состояний программной системы приведена на рис. 2.

 Диаграмма состояний программной системы
Основной модуль системы разработанного программного обеспечения представляет собой традиционное Win32 приложение со стандартным интерфейсом. Интерфейс позволяет выбрать один из видов моделируемого процесса: классическое формование из расплава; аэродинамическое формование; мокрое формование; гелеобразование в растворах полимеров диффузией осадителя; термотропное гелеобразование; механотропное гелеобразование. Для каждого из видов формования можно вставлять в схему или удалять из нее определенные элементы (термошахту, эжектор) (рис.3). При этом реализована верификация предлагаемой пользователем схемы технологического процесса – она должна содержать необходимые элементы и в строго определенной последовательности. Интерфейс реализован на русском и английском языках.
После выбора технологической схемы система готова к расчету, в зависимости от выбранной модели выбирается нужный рабочий поток, который представляет собой средство для расчета именно этой модели. Непосредственно перед расчетом поток получает от представления все необходимые данные. 
Решатель содержит программно реализованные аналитические методы решения задач тепломассопереноса, приближенные методы тепломассопереноса, численные методы решения системы нелинейных обыкновенных дифференциальных уравнений с автоматическим выбором шага по заданной точности, для численного решения задач метод сеток (конечно-разностный метод) в цилиндрических координатах при изменении радиуса с учетом подвижной границы с использованием преобразование Мизеса. Если элементы содержат некое заданное распределение (например, фазовая диаграмма или распределение температур по длине термошахты), то оно интерполируется кубическими сплайнами по экспериментальным точкам. 
График каждого выходного параметра расчета представлен экземпляром класса “Curve”. Это контейнерный класс, содержащий массив данных с координатами кривой и предназначен для отображения графика в декартовых координатах. В классе реализована функция поиска максимального и минимального значения координаты графика, что важно для выбора масштаба. На приведенном ниже графике (рис. 4), каждому экземпляру класса CCurve соответствует одна кривая. Линии сетки рисуются вне класса CCurve, тогда как кривые и подписи к ним рисуются посредством класса CCurve. 

 	 
 Окно приложения 	 График, построенный посредством класса CCurve. Результаты моделирования. Аэродинамическое формование.

Система использует архитектуру Document-View, которая позволяет наиболее эффективно реализовать сохранение документа и работу с представлением. Результаты расчетов визуально отображаются в удобной форме для ознакомления пользователю. Выводиться несколько кривых на одном графике с разным масштабом. Специально для этого создан класс “CCurve”, который инкапсулирует все, что необходимо для настройки, вывода графиков. На рис. 5,6 представлены примеры визуализации расчетных данных. Реализована настройка параметров визуального представления расчетных данных. Для обработки расчетных данных другими приложениями предусмотрен экспорт выходных данных в формате CSV. 
Работоспособность разработанной программной системы предпроектных исследований технологических процессов формования химических волокон подтверждается результатами моделирования [Калабин А.Л., Пакшвер Э.А. // Химические волокна.-2000.- №2. //Химические волокна.-2005.-№2. //Химические волокна - 2005.-№5], которые удовлетворительно согласуются с экспериментальными данными и были использованы для выбора параметров при разработки новых реальных технологических процессов.
 	
 
 Результаты моделирования. Классическое формование из расплава	Рис. 6. Результаты моделирования. Мокрое формование при гелеобразовании в растворе полимера 


